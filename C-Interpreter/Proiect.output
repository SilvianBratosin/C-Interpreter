Terminals unused in grammar

    OCTAL_NUMBER
    PREINC
    PREDEC
    POSTINC
    POSTDEC


Grammar

    0 $accept: program $end

    1 program: function

    2 function: function stmt
    3         | %empty

    4 stmt: ';'
    5     | expr ';'
    6     | WRITE expr ';'
    7     | VARIABLE '=' expr ';'
    8     | WHILE '(' expr ')' stmt
    9     | FOR '(' stmt expr ';' expr ')' stmt
   10     | IF '(' expr ')' stmt
   11     | IF '(' expr ')' stmt ELSE stmt
   12     | '{' stmt_list '}'

   13 stmt_list: stmt
   14          | stmt_list stmt

   15 expr: INTEGER
   16     | VARIABLE
   17     | L_INTEGER
   18     | U_INTEGER
   19     | U_L_INTEGER
   20     | SHORT
   21     | U_SHORT
   22     | DOUBLE
   23     | '-' expr
   24     | expr '+' expr
   25     | expr PE expr
   26     | expr '-' expr
   27     | expr MiE expr
   28     | expr '*' expr
   29     | expr ME expr
   30     | expr '/' expr
   31     | expr DE expr
   32     | expr '<' expr
   33     | expr '>' expr
   34     | expr GE expr
   35     | expr LE expr
   36     | expr NE expr
   37     | expr EQ expr
   38     | expr INC
   39     | expr DEC
   40     | INC expr
   41     | DEC expr
   42     | '(' expr ')'


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 8 9 10 11 42
    ')' (41) 8 9 10 11 42
    '*' (42) 28
    '+' (43) 24
    '-' (45) 23 26
    '/' (47) 30
    ';' (59) 4 5 6 7 9
    '<' (60) 32
    '=' (61) 7
    '>' (62) 33
    '{' (123) 12
    '}' (125) 12
    error (256)
    INTEGER <iValue> (258) 15
    VARIABLE <sIndex> (259) 7 16
    DOUBLE <dValue> (260) 22
    OCTAL_NUMBER <iValue> (261)
    WHILE (262) 8
    IF (263) 10 11
    FOR (264) 9
    WRITE (265) 6
    IFX (266)
    ELSE (267) 11
    L_INTEGER <iValue> (268) 17
    U_INTEGER <iValue> (269) 18
    U_L_INTEGER <iValue> (270) 19
    SHORT <iValue> (271) 20
    U_SHORT <iValue> (272) 21
    GE (273) 34
    LE (274) 35
    EQ (275) 37
    NE (276) 36
    ME (277) 29
    DE (278) 31
    PE (279) 25
    MiE (280) 27
    UMINUS (281)
    INC (282) 38 40
    DEC (283) 39 41
    PREINC (284)
    PREDEC (285)
    POSTINC (286)
    POSTDEC (287)


Nonterminals, with rules where they appear

    $accept (45)
        on left: 0
    program (46)
        on left: 1
        on right: 0
    function (47)
        on left: 2 3
        on right: 1 2
    stmt <nPtr> (48)
        on left: 4 5 6 7 8 9 10 11 12
        on right: 2 8 9 10 11 13 14
    stmt_list <nPtr> (49)
        on left: 13 14
        on right: 12 14
    expr <nPtr> (50)
        on left: 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42
        on right: 5 6 7 8 9 10 11 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42


State 0

    0 $accept: . program $end

    $default  reduce using rule 3 (function)

    program   go to state 1
    function  go to state 2


State 1

    0 $accept: program . $end

    $end  shift, and go to state 3


State 2

    1 program: function .
    2 function: function . stmt

    INTEGER      shift, and go to state 4
    VARIABLE     shift, and go to state 5
    DOUBLE       shift, and go to state 6
    WHILE        shift, and go to state 7
    IF           shift, and go to state 8
    FOR          shift, and go to state 9
    WRITE        shift, and go to state 10
    L_INTEGER    shift, and go to state 11
    U_INTEGER    shift, and go to state 12
    U_L_INTEGER  shift, and go to state 13
    SHORT        shift, and go to state 14
    U_SHORT      shift, and go to state 15
    '-'          shift, and go to state 16
    INC          shift, and go to state 17
    DEC          shift, and go to state 18
    ';'          shift, and go to state 19
    '('          shift, and go to state 20
    '{'          shift, and go to state 21

    $default  reduce using rule 1 (program)

    stmt  go to state 22
    expr  go to state 23


State 3

    0 $accept: program $end .

    $default  accept


State 4

   15 expr: INTEGER .

    $default  reduce using rule 15 (expr)


State 5

    7 stmt: VARIABLE . '=' expr ';'
   16 expr: VARIABLE .

    '='  shift, and go to state 24

    $default  reduce using rule 16 (expr)


State 6

   22 expr: DOUBLE .

    $default  reduce using rule 22 (expr)


State 7

    8 stmt: WHILE . '(' expr ')' stmt

    '('  shift, and go to state 25


State 8

   10 stmt: IF . '(' expr ')' stmt
   11     | IF . '(' expr ')' stmt ELSE stmt

    '('  shift, and go to state 26


State 9

    9 stmt: FOR . '(' stmt expr ';' expr ')' stmt

    '('  shift, and go to state 27


State 10

    6 stmt: WRITE . expr ';'

    INTEGER      shift, and go to state 4
    VARIABLE     shift, and go to state 28
    DOUBLE       shift, and go to state 6
    L_INTEGER    shift, and go to state 11
    U_INTEGER    shift, and go to state 12
    U_L_INTEGER  shift, and go to state 13
    SHORT        shift, and go to state 14
    U_SHORT      shift, and go to state 15
    '-'          shift, and go to state 16
    INC          shift, and go to state 17
    DEC          shift, and go to state 18
    '('          shift, and go to state 20

    expr  go to state 29


State 11

   17 expr: L_INTEGER .

    $default  reduce using rule 17 (expr)


State 12

   18 expr: U_INTEGER .

    $default  reduce using rule 18 (expr)


State 13

   19 expr: U_L_INTEGER .

    $default  reduce using rule 19 (expr)


State 14

   20 expr: SHORT .

    $default  reduce using rule 20 (expr)


State 15

   21 expr: U_SHORT .

    $default  reduce using rule 21 (expr)


State 16

   23 expr: '-' . expr

    INTEGER      shift, and go to state 4
    VARIABLE     shift, and go to state 28
    DOUBLE       shift, and go to state 6
    L_INTEGER    shift, and go to state 11
    U_INTEGER    shift, and go to state 12
    U_L_INTEGER  shift, and go to state 13
    SHORT        shift, and go to state 14
    U_SHORT      shift, and go to state 15
    '-'          shift, and go to state 16
    INC          shift, and go to state 17
    DEC          shift, and go to state 18
    '('          shift, and go to state 20

    expr  go to state 30


State 17

   40 expr: INC . expr

    INTEGER      shift, and go to state 4
    VARIABLE     shift, and go to state 28
    DOUBLE       shift, and go to state 6
    L_INTEGER    shift, and go to state 11
    U_INTEGER    shift, and go to state 12
    U_L_INTEGER  shift, and go to state 13
    SHORT        shift, and go to state 14
    U_SHORT      shift, and go to state 15
    '-'          shift, and go to state 16
    INC          shift, and go to state 17
    DEC          shift, and go to state 18
    '('          shift, and go to state 20

    expr  go to state 31


State 18

   41 expr: DEC . expr

    INTEGER      shift, and go to state 4
    VARIABLE     shift, and go to state 28
    DOUBLE       shift, and go to state 6
    L_INTEGER    shift, and go to state 11
    U_INTEGER    shift, and go to state 12
    U_L_INTEGER  shift, and go to state 13
    SHORT        shift, and go to state 14
    U_SHORT      shift, and go to state 15
    '-'          shift, and go to state 16
    INC          shift, and go to state 17
    DEC          shift, and go to state 18
    '('          shift, and go to state 20

    expr  go to state 32


State 19

    4 stmt: ';' .

    $default  reduce using rule 4 (stmt)


State 20

   42 expr: '(' . expr ')'

    INTEGER      shift, and go to state 4
    VARIABLE     shift, and go to state 28
    DOUBLE       shift, and go to state 6
    L_INTEGER    shift, and go to state 11
    U_INTEGER    shift, and go to state 12
    U_L_INTEGER  shift, and go to state 13
    SHORT        shift, and go to state 14
    U_SHORT      shift, and go to state 15
    '-'          shift, and go to state 16
    INC          shift, and go to state 17
    DEC          shift, and go to state 18
    '('          shift, and go to state 20

    expr  go to state 33


State 21

   12 stmt: '{' . stmt_list '}'

    INTEGER      shift, and go to state 4
    VARIABLE     shift, and go to state 5
    DOUBLE       shift, and go to state 6
    WHILE        shift, and go to state 7
    IF           shift, and go to state 8
    FOR          shift, and go to state 9
    WRITE        shift, and go to state 10
    L_INTEGER    shift, and go to state 11
    U_INTEGER    shift, and go to state 12
    U_L_INTEGER  shift, and go to state 13
    SHORT        shift, and go to state 14
    U_SHORT      shift, and go to state 15
    '-'          shift, and go to state 16
    INC          shift, and go to state 17
    DEC          shift, and go to state 18
    ';'          shift, and go to state 19
    '('          shift, and go to state 20
    '{'          shift, and go to state 21

    stmt       go to state 34
    stmt_list  go to state 35
    expr       go to state 23


State 22

    2 function: function stmt .

    $default  reduce using rule 2 (function)


State 23

    5 stmt: expr . ';'
   24 expr: expr . '+' expr
   25     | expr . PE expr
   26     | expr . '-' expr
   27     | expr . MiE expr
   28     | expr . '*' expr
   29     | expr . ME expr
   30     | expr . '/' expr
   31     | expr . DE expr
   32     | expr . '<' expr
   33     | expr . '>' expr
   34     | expr . GE expr
   35     | expr . LE expr
   36     | expr . NE expr
   37     | expr . EQ expr
   38     | expr . INC
   39     | expr . DEC

    GE   shift, and go to state 36
    LE   shift, and go to state 37
    EQ   shift, and go to state 38
    NE   shift, and go to state 39
    '>'  shift, and go to state 40
    '<'  shift, and go to state 41
    ME   shift, and go to state 42
    DE   shift, and go to state 43
    PE   shift, and go to state 44
    MiE  shift, and go to state 45
    '+'  shift, and go to state 46
    '-'  shift, and go to state 47
    '*'  shift, and go to state 48
    '/'  shift, and go to state 49
    INC  shift, and go to state 50
    DEC  shift, and go to state 51
    ';'  shift, and go to state 52


State 24

    7 stmt: VARIABLE '=' . expr ';'

    INTEGER      shift, and go to state 4
    VARIABLE     shift, and go to state 28
    DOUBLE       shift, and go to state 6
    L_INTEGER    shift, and go to state 11
    U_INTEGER    shift, and go to state 12
    U_L_INTEGER  shift, and go to state 13
    SHORT        shift, and go to state 14
    U_SHORT      shift, and go to state 15
    '-'          shift, and go to state 16
    INC          shift, and go to state 17
    DEC          shift, and go to state 18
    '('          shift, and go to state 20

    expr  go to state 53


State 25

    8 stmt: WHILE '(' . expr ')' stmt

    INTEGER      shift, and go to state 4
    VARIABLE     shift, and go to state 28
    DOUBLE       shift, and go to state 6
    L_INTEGER    shift, and go to state 11
    U_INTEGER    shift, and go to state 12
    U_L_INTEGER  shift, and go to state 13
    SHORT        shift, and go to state 14
    U_SHORT      shift, and go to state 15
    '-'          shift, and go to state 16
    INC          shift, and go to state 17
    DEC          shift, and go to state 18
    '('          shift, and go to state 20

    expr  go to state 54


State 26

   10 stmt: IF '(' . expr ')' stmt
   11     | IF '(' . expr ')' stmt ELSE stmt

    INTEGER      shift, and go to state 4
    VARIABLE     shift, and go to state 28
    DOUBLE       shift, and go to state 6
    L_INTEGER    shift, and go to state 11
    U_INTEGER    shift, and go to state 12
    U_L_INTEGER  shift, and go to state 13
    SHORT        shift, and go to state 14
    U_SHORT      shift, and go to state 15
    '-'          shift, and go to state 16
    INC          shift, and go to state 17
    DEC          shift, and go to state 18
    '('          shift, and go to state 20

    expr  go to state 55


State 27

    9 stmt: FOR '(' . stmt expr ';' expr ')' stmt

    INTEGER      shift, and go to state 4
    VARIABLE     shift, and go to state 5
    DOUBLE       shift, and go to state 6
    WHILE        shift, and go to state 7
    IF           shift, and go to state 8
    FOR          shift, and go to state 9
    WRITE        shift, and go to state 10
    L_INTEGER    shift, and go to state 11
    U_INTEGER    shift, and go to state 12
    U_L_INTEGER  shift, and go to state 13
    SHORT        shift, and go to state 14
    U_SHORT      shift, and go to state 15
    '-'          shift, and go to state 16
    INC          shift, and go to state 17
    DEC          shift, and go to state 18
    ';'          shift, and go to state 19
    '('          shift, and go to state 20
    '{'          shift, and go to state 21

    stmt  go to state 56
    expr  go to state 23


State 28

   16 expr: VARIABLE .

    $default  reduce using rule 16 (expr)


State 29

    6 stmt: WRITE expr . ';'
   24 expr: expr . '+' expr
   25     | expr . PE expr
   26     | expr . '-' expr
   27     | expr . MiE expr
   28     | expr . '*' expr
   29     | expr . ME expr
   30     | expr . '/' expr
   31     | expr . DE expr
   32     | expr . '<' expr
   33     | expr . '>' expr
   34     | expr . GE expr
   35     | expr . LE expr
   36     | expr . NE expr
   37     | expr . EQ expr
   38     | expr . INC
   39     | expr . DEC

    GE   shift, and go to state 36
    LE   shift, and go to state 37
    EQ   shift, and go to state 38
    NE   shift, and go to state 39
    '>'  shift, and go to state 40
    '<'  shift, and go to state 41
    ME   shift, and go to state 42
    DE   shift, and go to state 43
    PE   shift, and go to state 44
    MiE  shift, and go to state 45
    '+'  shift, and go to state 46
    '-'  shift, and go to state 47
    '*'  shift, and go to state 48
    '/'  shift, and go to state 49
    INC  shift, and go to state 50
    DEC  shift, and go to state 51
    ';'  shift, and go to state 57


State 30

   23 expr: '-' expr .
   24     | expr . '+' expr
   25     | expr . PE expr
   26     | expr . '-' expr
   27     | expr . MiE expr
   28     | expr . '*' expr
   29     | expr . ME expr
   30     | expr . '/' expr
   31     | expr . DE expr
   32     | expr . '<' expr
   33     | expr . '>' expr
   34     | expr . GE expr
   35     | expr . LE expr
   36     | expr . NE expr
   37     | expr . EQ expr
   38     | expr . INC
   39     | expr . DEC

    INC  shift, and go to state 50
    DEC  shift, and go to state 51

    $default  reduce using rule 23 (expr)


State 31

   24 expr: expr . '+' expr
   25     | expr . PE expr
   26     | expr . '-' expr
   27     | expr . MiE expr
   28     | expr . '*' expr
   29     | expr . ME expr
   30     | expr . '/' expr
   31     | expr . DE expr
   32     | expr . '<' expr
   33     | expr . '>' expr
   34     | expr . GE expr
   35     | expr . LE expr
   36     | expr . NE expr
   37     | expr . EQ expr
   38     | expr . INC
   39     | expr . DEC
   40     | INC expr .

    INC  error (nonassociative)
    DEC  error (nonassociative)

    $default  reduce using rule 40 (expr)


State 32

   24 expr: expr . '+' expr
   25     | expr . PE expr
   26     | expr . '-' expr
   27     | expr . MiE expr
   28     | expr . '*' expr
   29     | expr . ME expr
   30     | expr . '/' expr
   31     | expr . DE expr
   32     | expr . '<' expr
   33     | expr . '>' expr
   34     | expr . GE expr
   35     | expr . LE expr
   36     | expr . NE expr
   37     | expr . EQ expr
   38     | expr . INC
   39     | expr . DEC
   41     | DEC expr .

    INC  error (nonassociative)
    DEC  error (nonassociative)

    $default  reduce using rule 41 (expr)


State 33

   24 expr: expr . '+' expr
   25     | expr . PE expr
   26     | expr . '-' expr
   27     | expr . MiE expr
   28     | expr . '*' expr
   29     | expr . ME expr
   30     | expr . '/' expr
   31     | expr . DE expr
   32     | expr . '<' expr
   33     | expr . '>' expr
   34     | expr . GE expr
   35     | expr . LE expr
   36     | expr . NE expr
   37     | expr . EQ expr
   38     | expr . INC
   39     | expr . DEC
   42     | '(' expr . ')'

    GE   shift, and go to state 36
    LE   shift, and go to state 37
    EQ   shift, and go to state 38
    NE   shift, and go to state 39
    '>'  shift, and go to state 40
    '<'  shift, and go to state 41
    ME   shift, and go to state 42
    DE   shift, and go to state 43
    PE   shift, and go to state 44
    MiE  shift, and go to state 45
    '+'  shift, and go to state 46
    '-'  shift, and go to state 47
    '*'  shift, and go to state 48
    '/'  shift, and go to state 49
    INC  shift, and go to state 50
    DEC  shift, and go to state 51
    ')'  shift, and go to state 58


State 34

   13 stmt_list: stmt .

    $default  reduce using rule 13 (stmt_list)


State 35

   12 stmt: '{' stmt_list . '}'
   14 stmt_list: stmt_list . stmt

    INTEGER      shift, and go to state 4
    VARIABLE     shift, and go to state 5
    DOUBLE       shift, and go to state 6
    WHILE        shift, and go to state 7
    IF           shift, and go to state 8
    FOR          shift, and go to state 9
    WRITE        shift, and go to state 10
    L_INTEGER    shift, and go to state 11
    U_INTEGER    shift, and go to state 12
    U_L_INTEGER  shift, and go to state 13
    SHORT        shift, and go to state 14
    U_SHORT      shift, and go to state 15
    '-'          shift, and go to state 16
    INC          shift, and go to state 17
    DEC          shift, and go to state 18
    ';'          shift, and go to state 19
    '('          shift, and go to state 20
    '{'          shift, and go to state 21
    '}'          shift, and go to state 59

    stmt  go to state 60
    expr  go to state 23


State 36

   34 expr: expr GE . expr

    INTEGER      shift, and go to state 4
    VARIABLE     shift, and go to state 28
    DOUBLE       shift, and go to state 6
    L_INTEGER    shift, and go to state 11
    U_INTEGER    shift, and go to state 12
    U_L_INTEGER  shift, and go to state 13
    SHORT        shift, and go to state 14
    U_SHORT      shift, and go to state 15
    '-'          shift, and go to state 16
    INC          shift, and go to state 17
    DEC          shift, and go to state 18
    '('          shift, and go to state 20

    expr  go to state 61


State 37

   35 expr: expr LE . expr

    INTEGER      shift, and go to state 4
    VARIABLE     shift, and go to state 28
    DOUBLE       shift, and go to state 6
    L_INTEGER    shift, and go to state 11
    U_INTEGER    shift, and go to state 12
    U_L_INTEGER  shift, and go to state 13
    SHORT        shift, and go to state 14
    U_SHORT      shift, and go to state 15
    '-'          shift, and go to state 16
    INC          shift, and go to state 17
    DEC          shift, and go to state 18
    '('          shift, and go to state 20

    expr  go to state 62


State 38

   37 expr: expr EQ . expr

    INTEGER      shift, and go to state 4
    VARIABLE     shift, and go to state 28
    DOUBLE       shift, and go to state 6
    L_INTEGER    shift, and go to state 11
    U_INTEGER    shift, and go to state 12
    U_L_INTEGER  shift, and go to state 13
    SHORT        shift, and go to state 14
    U_SHORT      shift, and go to state 15
    '-'          shift, and go to state 16
    INC          shift, and go to state 17
    DEC          shift, and go to state 18
    '('          shift, and go to state 20

    expr  go to state 63


State 39

   36 expr: expr NE . expr

    INTEGER      shift, and go to state 4
    VARIABLE     shift, and go to state 28
    DOUBLE       shift, and go to state 6
    L_INTEGER    shift, and go to state 11
    U_INTEGER    shift, and go to state 12
    U_L_INTEGER  shift, and go to state 13
    SHORT        shift, and go to state 14
    U_SHORT      shift, and go to state 15
    '-'          shift, and go to state 16
    INC          shift, and go to state 17
    DEC          shift, and go to state 18
    '('          shift, and go to state 20

    expr  go to state 64


State 40

   33 expr: expr '>' . expr

    INTEGER      shift, and go to state 4
    VARIABLE     shift, and go to state 28
    DOUBLE       shift, and go to state 6
    L_INTEGER    shift, and go to state 11
    U_INTEGER    shift, and go to state 12
    U_L_INTEGER  shift, and go to state 13
    SHORT        shift, and go to state 14
    U_SHORT      shift, and go to state 15
    '-'          shift, and go to state 16
    INC          shift, and go to state 17
    DEC          shift, and go to state 18
    '('          shift, and go to state 20

    expr  go to state 65


State 41

   32 expr: expr '<' . expr

    INTEGER      shift, and go to state 4
    VARIABLE     shift, and go to state 28
    DOUBLE       shift, and go to state 6
    L_INTEGER    shift, and go to state 11
    U_INTEGER    shift, and go to state 12
    U_L_INTEGER  shift, and go to state 13
    SHORT        shift, and go to state 14
    U_SHORT      shift, and go to state 15
    '-'          shift, and go to state 16
    INC          shift, and go to state 17
    DEC          shift, and go to state 18
    '('          shift, and go to state 20

    expr  go to state 66


State 42

   29 expr: expr ME . expr

    INTEGER      shift, and go to state 4
    VARIABLE     shift, and go to state 28
    DOUBLE       shift, and go to state 6
    L_INTEGER    shift, and go to state 11
    U_INTEGER    shift, and go to state 12
    U_L_INTEGER  shift, and go to state 13
    SHORT        shift, and go to state 14
    U_SHORT      shift, and go to state 15
    '-'          shift, and go to state 16
    INC          shift, and go to state 17
    DEC          shift, and go to state 18
    '('          shift, and go to state 20

    expr  go to state 67


State 43

   31 expr: expr DE . expr

    INTEGER      shift, and go to state 4
    VARIABLE     shift, and go to state 28
    DOUBLE       shift, and go to state 6
    L_INTEGER    shift, and go to state 11
    U_INTEGER    shift, and go to state 12
    U_L_INTEGER  shift, and go to state 13
    SHORT        shift, and go to state 14
    U_SHORT      shift, and go to state 15
    '-'          shift, and go to state 16
    INC          shift, and go to state 17
    DEC          shift, and go to state 18
    '('          shift, and go to state 20

    expr  go to state 68


State 44

   25 expr: expr PE . expr

    INTEGER      shift, and go to state 4
    VARIABLE     shift, and go to state 28
    DOUBLE       shift, and go to state 6
    L_INTEGER    shift, and go to state 11
    U_INTEGER    shift, and go to state 12
    U_L_INTEGER  shift, and go to state 13
    SHORT        shift, and go to state 14
    U_SHORT      shift, and go to state 15
    '-'          shift, and go to state 16
    INC          shift, and go to state 17
    DEC          shift, and go to state 18
    '('          shift, and go to state 20

    expr  go to state 69


State 45

   27 expr: expr MiE . expr

    INTEGER      shift, and go to state 4
    VARIABLE     shift, and go to state 28
    DOUBLE       shift, and go to state 6
    L_INTEGER    shift, and go to state 11
    U_INTEGER    shift, and go to state 12
    U_L_INTEGER  shift, and go to state 13
    SHORT        shift, and go to state 14
    U_SHORT      shift, and go to state 15
    '-'          shift, and go to state 16
    INC          shift, and go to state 17
    DEC          shift, and go to state 18
    '('          shift, and go to state 20

    expr  go to state 70


State 46

   24 expr: expr '+' . expr

    INTEGER      shift, and go to state 4
    VARIABLE     shift, and go to state 28
    DOUBLE       shift, and go to state 6
    L_INTEGER    shift, and go to state 11
    U_INTEGER    shift, and go to state 12
    U_L_INTEGER  shift, and go to state 13
    SHORT        shift, and go to state 14
    U_SHORT      shift, and go to state 15
    '-'          shift, and go to state 16
    INC          shift, and go to state 17
    DEC          shift, and go to state 18
    '('          shift, and go to state 20

    expr  go to state 71


State 47

   26 expr: expr '-' . expr

    INTEGER      shift, and go to state 4
    VARIABLE     shift, and go to state 28
    DOUBLE       shift, and go to state 6
    L_INTEGER    shift, and go to state 11
    U_INTEGER    shift, and go to state 12
    U_L_INTEGER  shift, and go to state 13
    SHORT        shift, and go to state 14
    U_SHORT      shift, and go to state 15
    '-'          shift, and go to state 16
    INC          shift, and go to state 17
    DEC          shift, and go to state 18
    '('          shift, and go to state 20

    expr  go to state 72


State 48

   28 expr: expr '*' . expr

    INTEGER      shift, and go to state 4
    VARIABLE     shift, and go to state 28
    DOUBLE       shift, and go to state 6
    L_INTEGER    shift, and go to state 11
    U_INTEGER    shift, and go to state 12
    U_L_INTEGER  shift, and go to state 13
    SHORT        shift, and go to state 14
    U_SHORT      shift, and go to state 15
    '-'          shift, and go to state 16
    INC          shift, and go to state 17
    DEC          shift, and go to state 18
    '('          shift, and go to state 20

    expr  go to state 73


State 49

   30 expr: expr '/' . expr

    INTEGER      shift, and go to state 4
    VARIABLE     shift, and go to state 28
    DOUBLE       shift, and go to state 6
    L_INTEGER    shift, and go to state 11
    U_INTEGER    shift, and go to state 12
    U_L_INTEGER  shift, and go to state 13
    SHORT        shift, and go to state 14
    U_SHORT      shift, and go to state 15
    '-'          shift, and go to state 16
    INC          shift, and go to state 17
    DEC          shift, and go to state 18
    '('          shift, and go to state 20

    expr  go to state 74


State 50

   38 expr: expr INC .

    $default  reduce using rule 38 (expr)


State 51

   39 expr: expr DEC .

    $default  reduce using rule 39 (expr)


State 52

    5 stmt: expr ';' .

    $default  reduce using rule 5 (stmt)


State 53

    7 stmt: VARIABLE '=' expr . ';'
   24 expr: expr . '+' expr
   25     | expr . PE expr
   26     | expr . '-' expr
   27     | expr . MiE expr
   28     | expr . '*' expr
   29     | expr . ME expr
   30     | expr . '/' expr
   31     | expr . DE expr
   32     | expr . '<' expr
   33     | expr . '>' expr
   34     | expr . GE expr
   35     | expr . LE expr
   36     | expr . NE expr
   37     | expr . EQ expr
   38     | expr . INC
   39     | expr . DEC

    GE   shift, and go to state 36
    LE   shift, and go to state 37
    EQ   shift, and go to state 38
    NE   shift, and go to state 39
    '>'  shift, and go to state 40
    '<'  shift, and go to state 41
    ME   shift, and go to state 42
    DE   shift, and go to state 43
    PE   shift, and go to state 44
    MiE  shift, and go to state 45
    '+'  shift, and go to state 46
    '-'  shift, and go to state 47
    '*'  shift, and go to state 48
    '/'  shift, and go to state 49
    INC  shift, and go to state 50
    DEC  shift, and go to state 51
    ';'  shift, and go to state 75


State 54

    8 stmt: WHILE '(' expr . ')' stmt
   24 expr: expr . '+' expr
   25     | expr . PE expr
   26     | expr . '-' expr
   27     | expr . MiE expr
   28     | expr . '*' expr
   29     | expr . ME expr
   30     | expr . '/' expr
   31     | expr . DE expr
   32     | expr . '<' expr
   33     | expr . '>' expr
   34     | expr . GE expr
   35     | expr . LE expr
   36     | expr . NE expr
   37     | expr . EQ expr
   38     | expr . INC
   39     | expr . DEC

    GE   shift, and go to state 36
    LE   shift, and go to state 37
    EQ   shift, and go to state 38
    NE   shift, and go to state 39
    '>'  shift, and go to state 40
    '<'  shift, and go to state 41
    ME   shift, and go to state 42
    DE   shift, and go to state 43
    PE   shift, and go to state 44
    MiE  shift, and go to state 45
    '+'  shift, and go to state 46
    '-'  shift, and go to state 47
    '*'  shift, and go to state 48
    '/'  shift, and go to state 49
    INC  shift, and go to state 50
    DEC  shift, and go to state 51
    ')'  shift, and go to state 76


State 55

   10 stmt: IF '(' expr . ')' stmt
   11     | IF '(' expr . ')' stmt ELSE stmt
   24 expr: expr . '+' expr
   25     | expr . PE expr
   26     | expr . '-' expr
   27     | expr . MiE expr
   28     | expr . '*' expr
   29     | expr . ME expr
   30     | expr . '/' expr
   31     | expr . DE expr
   32     | expr . '<' expr
   33     | expr . '>' expr
   34     | expr . GE expr
   35     | expr . LE expr
   36     | expr . NE expr
   37     | expr . EQ expr
   38     | expr . INC
   39     | expr . DEC

    GE   shift, and go to state 36
    LE   shift, and go to state 37
    EQ   shift, and go to state 38
    NE   shift, and go to state 39
    '>'  shift, and go to state 40
    '<'  shift, and go to state 41
    ME   shift, and go to state 42
    DE   shift, and go to state 43
    PE   shift, and go to state 44
    MiE  shift, and go to state 45
    '+'  shift, and go to state 46
    '-'  shift, and go to state 47
    '*'  shift, and go to state 48
    '/'  shift, and go to state 49
    INC  shift, and go to state 50
    DEC  shift, and go to state 51
    ')'  shift, and go to state 77


State 56

    9 stmt: FOR '(' stmt . expr ';' expr ')' stmt

    INTEGER      shift, and go to state 4
    VARIABLE     shift, and go to state 28
    DOUBLE       shift, and go to state 6
    L_INTEGER    shift, and go to state 11
    U_INTEGER    shift, and go to state 12
    U_L_INTEGER  shift, and go to state 13
    SHORT        shift, and go to state 14
    U_SHORT      shift, and go to state 15
    '-'          shift, and go to state 16
    INC          shift, and go to state 17
    DEC          shift, and go to state 18
    '('          shift, and go to state 20

    expr  go to state 78


State 57

    6 stmt: WRITE expr ';' .

    $default  reduce using rule 6 (stmt)


State 58

   42 expr: '(' expr ')' .

    $default  reduce using rule 42 (expr)


State 59

   12 stmt: '{' stmt_list '}' .

    $default  reduce using rule 12 (stmt)


State 60

   14 stmt_list: stmt_list stmt .

    $default  reduce using rule 14 (stmt_list)


State 61

   24 expr: expr . '+' expr
   25     | expr . PE expr
   26     | expr . '-' expr
   27     | expr . MiE expr
   28     | expr . '*' expr
   29     | expr . ME expr
   30     | expr . '/' expr
   31     | expr . DE expr
   32     | expr . '<' expr
   33     | expr . '>' expr
   34     | expr . GE expr
   34     | expr GE expr .
   35     | expr . LE expr
   36     | expr . NE expr
   37     | expr . EQ expr
   38     | expr . INC
   39     | expr . DEC

    '+'  shift, and go to state 46
    '-'  shift, and go to state 47
    '*'  shift, and go to state 48
    '/'  shift, and go to state 49
    INC  shift, and go to state 50
    DEC  shift, and go to state 51

    $default  reduce using rule 34 (expr)


State 62

   24 expr: expr . '+' expr
   25     | expr . PE expr
   26     | expr . '-' expr
   27     | expr . MiE expr
   28     | expr . '*' expr
   29     | expr . ME expr
   30     | expr . '/' expr
   31     | expr . DE expr
   32     | expr . '<' expr
   33     | expr . '>' expr
   34     | expr . GE expr
   35     | expr . LE expr
   35     | expr LE expr .
   36     | expr . NE expr
   37     | expr . EQ expr
   38     | expr . INC
   39     | expr . DEC

    '+'  shift, and go to state 46
    '-'  shift, and go to state 47
    '*'  shift, and go to state 48
    '/'  shift, and go to state 49
    INC  shift, and go to state 50
    DEC  shift, and go to state 51

    $default  reduce using rule 35 (expr)


State 63

   24 expr: expr . '+' expr
   25     | expr . PE expr
   26     | expr . '-' expr
   27     | expr . MiE expr
   28     | expr . '*' expr
   29     | expr . ME expr
   30     | expr . '/' expr
   31     | expr . DE expr
   32     | expr . '<' expr
   33     | expr . '>' expr
   34     | expr . GE expr
   35     | expr . LE expr
   36     | expr . NE expr
   37     | expr . EQ expr
   37     | expr EQ expr .
   38     | expr . INC
   39     | expr . DEC

    '+'  shift, and go to state 46
    '-'  shift, and go to state 47
    '*'  shift, and go to state 48
    '/'  shift, and go to state 49
    INC  shift, and go to state 50
    DEC  shift, and go to state 51

    $default  reduce using rule 37 (expr)


State 64

   24 expr: expr . '+' expr
   25     | expr . PE expr
   26     | expr . '-' expr
   27     | expr . MiE expr
   28     | expr . '*' expr
   29     | expr . ME expr
   30     | expr . '/' expr
   31     | expr . DE expr
   32     | expr . '<' expr
   33     | expr . '>' expr
   34     | expr . GE expr
   35     | expr . LE expr
   36     | expr . NE expr
   36     | expr NE expr .
   37     | expr . EQ expr
   38     | expr . INC
   39     | expr . DEC

    '+'  shift, and go to state 46
    '-'  shift, and go to state 47
    '*'  shift, and go to state 48
    '/'  shift, and go to state 49
    INC  shift, and go to state 50
    DEC  shift, and go to state 51

    $default  reduce using rule 36 (expr)


State 65

   24 expr: expr . '+' expr
   25     | expr . PE expr
   26     | expr . '-' expr
   27     | expr . MiE expr
   28     | expr . '*' expr
   29     | expr . ME expr
   30     | expr . '/' expr
   31     | expr . DE expr
   32     | expr . '<' expr
   33     | expr . '>' expr
   33     | expr '>' expr .
   34     | expr . GE expr
   35     | expr . LE expr
   36     | expr . NE expr
   37     | expr . EQ expr
   38     | expr . INC
   39     | expr . DEC

    '+'  shift, and go to state 46
    '-'  shift, and go to state 47
    '*'  shift, and go to state 48
    '/'  shift, and go to state 49
    INC  shift, and go to state 50
    DEC  shift, and go to state 51

    $default  reduce using rule 33 (expr)


State 66

   24 expr: expr . '+' expr
   25     | expr . PE expr
   26     | expr . '-' expr
   27     | expr . MiE expr
   28     | expr . '*' expr
   29     | expr . ME expr
   30     | expr . '/' expr
   31     | expr . DE expr
   32     | expr . '<' expr
   32     | expr '<' expr .
   33     | expr . '>' expr
   34     | expr . GE expr
   35     | expr . LE expr
   36     | expr . NE expr
   37     | expr . EQ expr
   38     | expr . INC
   39     | expr . DEC

    '+'  shift, and go to state 46
    '-'  shift, and go to state 47
    '*'  shift, and go to state 48
    '/'  shift, and go to state 49
    INC  shift, and go to state 50
    DEC  shift, and go to state 51

    $default  reduce using rule 32 (expr)


State 67

   24 expr: expr . '+' expr
   25     | expr . PE expr
   26     | expr . '-' expr
   27     | expr . MiE expr
   28     | expr . '*' expr
   29     | expr . ME expr
   29     | expr ME expr .
   30     | expr . '/' expr
   31     | expr . DE expr
   32     | expr . '<' expr
   33     | expr . '>' expr
   34     | expr . GE expr
   35     | expr . LE expr
   36     | expr . NE expr
   37     | expr . EQ expr
   38     | expr . INC
   39     | expr . DEC

    '+'  shift, and go to state 46
    '-'  shift, and go to state 47
    '*'  shift, and go to state 48
    '/'  shift, and go to state 49
    INC  shift, and go to state 50
    DEC  shift, and go to state 51

    $default  reduce using rule 29 (expr)


State 68

   24 expr: expr . '+' expr
   25     | expr . PE expr
   26     | expr . '-' expr
   27     | expr . MiE expr
   28     | expr . '*' expr
   29     | expr . ME expr
   30     | expr . '/' expr
   31     | expr . DE expr
   31     | expr DE expr .
   32     | expr . '<' expr
   33     | expr . '>' expr
   34     | expr . GE expr
   35     | expr . LE expr
   36     | expr . NE expr
   37     | expr . EQ expr
   38     | expr . INC
   39     | expr . DEC

    '+'  shift, and go to state 46
    '-'  shift, and go to state 47
    '*'  shift, and go to state 48
    '/'  shift, and go to state 49
    INC  shift, and go to state 50
    DEC  shift, and go to state 51

    $default  reduce using rule 31 (expr)


State 69

   24 expr: expr . '+' expr
   25     | expr . PE expr
   25     | expr PE expr .
   26     | expr . '-' expr
   27     | expr . MiE expr
   28     | expr . '*' expr
   29     | expr . ME expr
   30     | expr . '/' expr
   31     | expr . DE expr
   32     | expr . '<' expr
   33     | expr . '>' expr
   34     | expr . GE expr
   35     | expr . LE expr
   36     | expr . NE expr
   37     | expr . EQ expr
   38     | expr . INC
   39     | expr . DEC

    '+'  shift, and go to state 46
    '-'  shift, and go to state 47
    '*'  shift, and go to state 48
    '/'  shift, and go to state 49
    INC  shift, and go to state 50
    DEC  shift, and go to state 51

    $default  reduce using rule 25 (expr)


State 70

   24 expr: expr . '+' expr
   25     | expr . PE expr
   26     | expr . '-' expr
   27     | expr . MiE expr
   27     | expr MiE expr .
   28     | expr . '*' expr
   29     | expr . ME expr
   30     | expr . '/' expr
   31     | expr . DE expr
   32     | expr . '<' expr
   33     | expr . '>' expr
   34     | expr . GE expr
   35     | expr . LE expr
   36     | expr . NE expr
   37     | expr . EQ expr
   38     | expr . INC
   39     | expr . DEC

    '+'  shift, and go to state 46
    '-'  shift, and go to state 47
    '*'  shift, and go to state 48
    '/'  shift, and go to state 49
    INC  shift, and go to state 50
    DEC  shift, and go to state 51

    $default  reduce using rule 27 (expr)


State 71

   24 expr: expr . '+' expr
   24     | expr '+' expr .
   25     | expr . PE expr
   26     | expr . '-' expr
   27     | expr . MiE expr
   28     | expr . '*' expr
   29     | expr . ME expr
   30     | expr . '/' expr
   31     | expr . DE expr
   32     | expr . '<' expr
   33     | expr . '>' expr
   34     | expr . GE expr
   35     | expr . LE expr
   36     | expr . NE expr
   37     | expr . EQ expr
   38     | expr . INC
   39     | expr . DEC

    '*'  shift, and go to state 48
    '/'  shift, and go to state 49
    INC  shift, and go to state 50
    DEC  shift, and go to state 51

    $default  reduce using rule 24 (expr)


State 72

   24 expr: expr . '+' expr
   25     | expr . PE expr
   26     | expr . '-' expr
   26     | expr '-' expr .
   27     | expr . MiE expr
   28     | expr . '*' expr
   29     | expr . ME expr
   30     | expr . '/' expr
   31     | expr . DE expr
   32     | expr . '<' expr
   33     | expr . '>' expr
   34     | expr . GE expr
   35     | expr . LE expr
   36     | expr . NE expr
   37     | expr . EQ expr
   38     | expr . INC
   39     | expr . DEC

    '*'  shift, and go to state 48
    '/'  shift, and go to state 49
    INC  shift, and go to state 50
    DEC  shift, and go to state 51

    $default  reduce using rule 26 (expr)


State 73

   24 expr: expr . '+' expr
   25     | expr . PE expr
   26     | expr . '-' expr
   27     | expr . MiE expr
   28     | expr . '*' expr
   28     | expr '*' expr .
   29     | expr . ME expr
   30     | expr . '/' expr
   31     | expr . DE expr
   32     | expr . '<' expr
   33     | expr . '>' expr
   34     | expr . GE expr
   35     | expr . LE expr
   36     | expr . NE expr
   37     | expr . EQ expr
   38     | expr . INC
   39     | expr . DEC

    INC  shift, and go to state 50
    DEC  shift, and go to state 51

    $default  reduce using rule 28 (expr)


State 74

   24 expr: expr . '+' expr
   25     | expr . PE expr
   26     | expr . '-' expr
   27     | expr . MiE expr
   28     | expr . '*' expr
   29     | expr . ME expr
   30     | expr . '/' expr
   30     | expr '/' expr .
   31     | expr . DE expr
   32     | expr . '<' expr
   33     | expr . '>' expr
   34     | expr . GE expr
   35     | expr . LE expr
   36     | expr . NE expr
   37     | expr . EQ expr
   38     | expr . INC
   39     | expr . DEC

    INC  shift, and go to state 50
    DEC  shift, and go to state 51

    $default  reduce using rule 30 (expr)


State 75

    7 stmt: VARIABLE '=' expr ';' .

    $default  reduce using rule 7 (stmt)


State 76

    8 stmt: WHILE '(' expr ')' . stmt

    INTEGER      shift, and go to state 4
    VARIABLE     shift, and go to state 5
    DOUBLE       shift, and go to state 6
    WHILE        shift, and go to state 7
    IF           shift, and go to state 8
    FOR          shift, and go to state 9
    WRITE        shift, and go to state 10
    L_INTEGER    shift, and go to state 11
    U_INTEGER    shift, and go to state 12
    U_L_INTEGER  shift, and go to state 13
    SHORT        shift, and go to state 14
    U_SHORT      shift, and go to state 15
    '-'          shift, and go to state 16
    INC          shift, and go to state 17
    DEC          shift, and go to state 18
    ';'          shift, and go to state 19
    '('          shift, and go to state 20
    '{'          shift, and go to state 21

    stmt  go to state 79
    expr  go to state 23


State 77

   10 stmt: IF '(' expr ')' . stmt
   11     | IF '(' expr ')' . stmt ELSE stmt

    INTEGER      shift, and go to state 4
    VARIABLE     shift, and go to state 5
    DOUBLE       shift, and go to state 6
    WHILE        shift, and go to state 7
    IF           shift, and go to state 8
    FOR          shift, and go to state 9
    WRITE        shift, and go to state 10
    L_INTEGER    shift, and go to state 11
    U_INTEGER    shift, and go to state 12
    U_L_INTEGER  shift, and go to state 13
    SHORT        shift, and go to state 14
    U_SHORT      shift, and go to state 15
    '-'          shift, and go to state 16
    INC          shift, and go to state 17
    DEC          shift, and go to state 18
    ';'          shift, and go to state 19
    '('          shift, and go to state 20
    '{'          shift, and go to state 21

    stmt  go to state 80
    expr  go to state 23


State 78

    9 stmt: FOR '(' stmt expr . ';' expr ')' stmt
   24 expr: expr . '+' expr
   25     | expr . PE expr
   26     | expr . '-' expr
   27     | expr . MiE expr
   28     | expr . '*' expr
   29     | expr . ME expr
   30     | expr . '/' expr
   31     | expr . DE expr
   32     | expr . '<' expr
   33     | expr . '>' expr
   34     | expr . GE expr
   35     | expr . LE expr
   36     | expr . NE expr
   37     | expr . EQ expr
   38     | expr . INC
   39     | expr . DEC

    GE   shift, and go to state 36
    LE   shift, and go to state 37
    EQ   shift, and go to state 38
    NE   shift, and go to state 39
    '>'  shift, and go to state 40
    '<'  shift, and go to state 41
    ME   shift, and go to state 42
    DE   shift, and go to state 43
    PE   shift, and go to state 44
    MiE  shift, and go to state 45
    '+'  shift, and go to state 46
    '-'  shift, and go to state 47
    '*'  shift, and go to state 48
    '/'  shift, and go to state 49
    INC  shift, and go to state 50
    DEC  shift, and go to state 51
    ';'  shift, and go to state 81


State 79

    8 stmt: WHILE '(' expr ')' stmt .

    $default  reduce using rule 8 (stmt)


State 80

   10 stmt: IF '(' expr ')' stmt .
   11     | IF '(' expr ')' stmt . ELSE stmt

    ELSE  shift, and go to state 82

    $default  reduce using rule 10 (stmt)


State 81

    9 stmt: FOR '(' stmt expr ';' . expr ')' stmt

    INTEGER      shift, and go to state 4
    VARIABLE     shift, and go to state 28
    DOUBLE       shift, and go to state 6
    L_INTEGER    shift, and go to state 11
    U_INTEGER    shift, and go to state 12
    U_L_INTEGER  shift, and go to state 13
    SHORT        shift, and go to state 14
    U_SHORT      shift, and go to state 15
    '-'          shift, and go to state 16
    INC          shift, and go to state 17
    DEC          shift, and go to state 18
    '('          shift, and go to state 20

    expr  go to state 83


State 82

   11 stmt: IF '(' expr ')' stmt ELSE . stmt

    INTEGER      shift, and go to state 4
    VARIABLE     shift, and go to state 5
    DOUBLE       shift, and go to state 6
    WHILE        shift, and go to state 7
    IF           shift, and go to state 8
    FOR          shift, and go to state 9
    WRITE        shift, and go to state 10
    L_INTEGER    shift, and go to state 11
    U_INTEGER    shift, and go to state 12
    U_L_INTEGER  shift, and go to state 13
    SHORT        shift, and go to state 14
    U_SHORT      shift, and go to state 15
    '-'          shift, and go to state 16
    INC          shift, and go to state 17
    DEC          shift, and go to state 18
    ';'          shift, and go to state 19
    '('          shift, and go to state 20
    '{'          shift, and go to state 21

    stmt  go to state 84
    expr  go to state 23


State 83

    9 stmt: FOR '(' stmt expr ';' expr . ')' stmt
   24 expr: expr . '+' expr
   25     | expr . PE expr
   26     | expr . '-' expr
   27     | expr . MiE expr
   28     | expr . '*' expr
   29     | expr . ME expr
   30     | expr . '/' expr
   31     | expr . DE expr
   32     | expr . '<' expr
   33     | expr . '>' expr
   34     | expr . GE expr
   35     | expr . LE expr
   36     | expr . NE expr
   37     | expr . EQ expr
   38     | expr . INC
   39     | expr . DEC

    GE   shift, and go to state 36
    LE   shift, and go to state 37
    EQ   shift, and go to state 38
    NE   shift, and go to state 39
    '>'  shift, and go to state 40
    '<'  shift, and go to state 41
    ME   shift, and go to state 42
    DE   shift, and go to state 43
    PE   shift, and go to state 44
    MiE  shift, and go to state 45
    '+'  shift, and go to state 46
    '-'  shift, and go to state 47
    '*'  shift, and go to state 48
    '/'  shift, and go to state 49
    INC  shift, and go to state 50
    DEC  shift, and go to state 51
    ')'  shift, and go to state 85


State 84

   11 stmt: IF '(' expr ')' stmt ELSE stmt .

    $default  reduce using rule 11 (stmt)


State 85

    9 stmt: FOR '(' stmt expr ';' expr ')' . stmt

    INTEGER      shift, and go to state 4
    VARIABLE     shift, and go to state 5
    DOUBLE       shift, and go to state 6
    WHILE        shift, and go to state 7
    IF           shift, and go to state 8
    FOR          shift, and go to state 9
    WRITE        shift, and go to state 10
    L_INTEGER    shift, and go to state 11
    U_INTEGER    shift, and go to state 12
    U_L_INTEGER  shift, and go to state 13
    SHORT        shift, and go to state 14
    U_SHORT      shift, and go to state 15
    '-'          shift, and go to state 16
    INC          shift, and go to state 17
    DEC          shift, and go to state 18
    ';'          shift, and go to state 19
    '('          shift, and go to state 20
    '{'          shift, and go to state 21

    stmt  go to state 86
    expr  go to state 23


State 86

    9 stmt: FOR '(' stmt expr ';' expr ')' stmt .

    $default  reduce using rule 9 (stmt)
